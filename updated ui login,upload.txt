<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dashboard</title>
    <link rel="stylesheet" href="{{ url_for('static', filename='style.css') }}">
</head>
<body>

    <!-- Header/Navbar -->
    <div class="header">
        <div>Wildlife Detection Dashboard</div>
        <div class="user-menu">
            <button class="user-icon" id="userIcon">ðŸ‘¤</button>
            <div class="dropdown hidden" id="userDropdown">
                <a href="#">Welcome, {{ username }}</a>
                <a href="/logout">Logout</a>
            </div>
        </div>
    </div>

    <!-- Main content -->
    <div class="main-container">
        <!-- Left Panel - Recent Detections -->
        <div class="left-panel">


            <h2>Recent Detections</h2>
            <ul id="detectionHistory" style="list-style: none; padding: 0;"></ul>
        </div>

        <!-- Right Panel - Download Logs -->
        <div class="right-panel">
            <h2>Download Logs</h2>
            <button id="downloadLogsButton" class="detectButton">Download Detection Logs</button>
        </div>
    </div>

    <script src="{{ url_for('static', filename='script.js') }}"></script>
</body>
</html>

this is dashboard.html

body {
    font-family: 'Poppins', sans-serif;
    margin: 0;
    padding: 0;
    background: linear-gradient(to right, #B2F4F1, #FFDDC1); /* Soft Aqua & Coral Gradient */
    color: #4a4a4a; /* Dark grey text */
}

/* Header Bar */
.header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    background-color: #ffffffcc; /* Soft off-white */
    padding: 2px 20px;
    color: #6f6f6f; /* Soft grey */
    font-size: 20px;
    font-weight: bold;
    border-bottom: 2px solid #eaeaea;
}

/* User Dropdown */
.user-menu {
    position: relative;
}
.user-icon {
    background: transparent;
    border: none;
    color: #6f6f6f;
    font-size: 24px;
    cursor: pointer;
    padding: 5px 5px;
}
.dropdown {
    position: absolute;
    top: 40px;
    right: 0;
    background-color: #fff;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);
    border-radius: 8px;
    overflow: hidden;
    z-index: 999;
}
.dropdown a {
    display: block;
    padding: 10px 20px;
    text-decoration: none;
    color: #4a4a4a;
    border-bottom: 1px solid #eee;
    font-size: 14px;
}
.dropdown a:hover {
    background-color: #f0f0f0;
}

/* Layout Panels */
.main-container {
    display: flex;
    flex-wrap: nowrap; 
    justify-content: center;
    padding: 40px;
    gap: 20px;
    transition: all 0.3s ease-in-out;
}
.left-panel,
.right-panel {
    flex: 0 0 45%;
    min-width: 300px;
    background: #ffffff;
    padding: 30px;
    border-radius: 20px;
    box-shadow: 0px 10px 25px rgba(0, 0, 0, 0.1);
    transition: all 0.3s ease-in-out;
}
.left-panel {
    margin: 0 auto;
    text-align: center;
}
.right-panel {
    display: none;
}

/* Panel Toggle on Detection */
.main-container .right-panel:not(.hidden) {
    display: block;
}
.main-container .move-left .left-panel {
    margin-left: 0;
}
.main-container .move-left .right-panel {
    display: block;
    margin-left: 20px;
}
.main-container:has(.right-panel.hidden) .left-panel {
    flex: 0 0 45%;
    width: 100%;
    margin: 0 auto;
}

/* Left Panel Adjustments Post Detection */
.left-panel.detected {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: flex-start;
}
.left-panel.detected #outputImage {
    display: block;
    margin-top: 20px;
    margin-bottom: 15px;
}
.left-panel.detected #detectButton {
    display: block;
    margin-top: 2px;
}

/* Upload UI */
#upload-container {
    text-align: center;
    margin-bottom: 20px;
}
#upload-button {
    display: inline-block;
    padding: 15px 25px;
    background-color: #FF7043; /* Coral */
    color: white;
    font-weight: bold;
    border-radius: 12px;
    border: 2px dashed transparent;
    cursor: pointer;
    transition: all 0.3s ease;
}
#upload-button.dragover {
    background-color: #f0fdf4;
    border: 2px dashed #FF7043; /* Coral */
    color: #FF7043;
}
input[type="file"] {
    display: none;
}

/* Detect Button */
#detectButton {
    background-color: #FF7043; /* Coral */
    color: white;
    border: none;
    padding: 12px 25px;
    font-size: 16px;
    margin-top: 20px;
    border-radius: 8px;
    cursor: pointer;
    display: block;
    margin-left: auto;
    margin-right: auto;
    transition: 0.3s;
}
#detectButton:hover {
    background-color: #FF5722; /* Darker Coral */
}

/* Spinner */
.spinner {
    border: 6px solid #FF7043; /* Coral */
    border-top: 6px solid white;
    border-radius: 50%;
    width: 40px;
    height: 40px;
    margin: 20px auto;
    animation: spin 1s linear infinite;
}
@keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
}

/* Image Output */
#outputImage {
    margin-top: 5px;
    width: 300px;
    max-width: 500px;
    height: 300px;
    object-fit: cover;
    border-radius: 10px;
    box-shadow: 0px 4px 12px rgba(0, 0, 0, 0.2);
}

/* Result Text & Facts Box */
#result {
    margin-bottom: 20px;
    font-size: 16px;
    line-height: 1.5;
}
#factsBox {
    background-color: #f9f6f0; /* Soft Coral Background */
    padding: 20px;
    border-radius: 15px;
}
#factsBox h2 {
    color: #6f6f6f; /* Grey for the heading */
}

/* Footer */
footer {
    text-align: center;
    padding: 0px;
    font-size: 14px;
    color: #6f6f6f;
    background-color: #FFE5D4; /* Soft Coral Footer */
    margin-top: 40px;
    position: fixed;
    left: 0;
    bottom: 0;
    width: 100%;
}

/* Alert Banner */
#alertBanner {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.7);
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 9999;
    opacity: 0;
    visibility: hidden;
    transition: opacity 0.5s ease, visibility 0s 0.5s;
}
#alertBanner.show {
    opacity: 1;
    visibility: visible;
    transition: opacity 0.5s ease;
}
.alert-box {
    background-color: #ec0404 !important;
    padding: 20px;
    border-radius: 10px;
    color: white;
    font-size: 18px;
    text-align: center;
    width: 80%;
    max-width: 400px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
}

/* Form for Login/Signup */
.form {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background-color: #ffffff;
    padding: 30px;
    border-radius: 8px;
    box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.2);
    width: 300px;
    z-index: 100;
    display: none;
}
.form input {
    width: 100%;
    padding: 12px;
    margin: 10px 0;
    border-radius: 5px;
    border: 1px solid #ddd;
}
.form button {
    background-color: #FF7043; /* Coral */
    color: white;
    border: none;
    padding: 12px 20px;
    font-size: 16px;
    margin-top: 10px;
    border-radius: 8px;
    cursor: pointer;
}
.form button:hover {
    background-color: #FF5722; /* Darker Coral Hover */
}
.form button[type="button"] {
    background-color: #e37c72; /* Soft red for cancel */
}

/* Utility Classes */
.hidden {
    display: none !important;
}

/* Centered Modal Style */
.popup-form {
    width: 400px;
    padding: 30px;
    background-color: #ffffff;
    border-radius: 10px;
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    text-align: center;
    z-index: 1000;
    font-family: Arial, sans-serif;
    box-sizing: border-box; /* Ensure padding is included in width calculation */
}

/* Input fields */
.popup-form input {
    width: 100%;
    padding: 12px;
    margin: 10px 0;
    border: 1px solid #ddd;
    border-radius: 8px;
    font-size: 16px;
    color: #333;
    background-color: #f9f9f9;
    transition: border-color 0.3s;
    box-sizing: border-box; /* Ensures padding is within the element's width */
}

/* Input fields on focus */
.popup-form input:focus {
    border-color: #FF7043;
    outline: none;
    background-color: #fff;
}

/* Submit and Cancel buttons */
.popup-form button {
    width: 100%;
    padding: 12px;
    margin: 10px 0;
    background-color: #FF7043;
    color: white;
    border: none;
    border-radius: 8px;
    font-size: 16px;
    cursor: pointer;
    transition: background-color 0.3s;
    box-sizing: border-box;
}

.popup-form button:hover {
    background-color: #FF5722;
}

.popup-form .cancel-btn {
    background-color: #FF7043;
}

.popup-form .cancel-btn:hover {
    background-color: #FF5722;
}

/* Background Overlay */
.overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5);
    z-index: 999;
}

/* Close the dropdown */
.hidden {
    display: none;
}

/* For smooth transitions */
.popup-form, .overlay {
    transition: opacity 0.3s ease;
}

/* Detection History List */
.history-list {
    list-style-type: none;
    padding: 0;
    margin-top: 20px;
}

.history-list li {
    background: #f9f6f0;
    margin-bottom: 10px;
    padding: 12px;
    border-radius: 8px;
    font-size: 15px;
    color: #4a4a4a;
    box-shadow: 0 2px 8px rgba(0,0,0,0.05);
}

/* Download Button */
.download-btn {
    background-color: #FF7043;
    color: white;
    border: none;
    padding: 14px 28px;
    font-size: 16px;
    border-radius: 10px;
    cursor: pointer;
    margin-top: 30px;
    transition: background-color 0.3s;
}

.download-btn:hover {
    background-color: #FF5722;
}

/* Navbar Title */
.logo {
    font-weight: bold;
    font-size: 22px;
}

let hasDetectedOnce = false;

document.getElementById("detectButton").addEventListener("click", uploadImage);

function uploadImage() {
    const input = document.getElementById("imageInput");
    const spinner = document.getElementById("spinner");
    const resultDiv = document.getElementById("result");
    const factsBox = document.getElementById("factsBox");
    const animalFacts = document.getElementById("animalFacts");
    const outputImage = document.getElementById("outputImage");
    const mainContainer = document.getElementById("mainContainer");
    const rightPanel = document.getElementById("rightPanel");
    const leftPanel = document.getElementById("leftPanel");
    const alertBanner = document.getElementById("alertBanner");

    if (input.files.length === 0) {
        alert("Please select an image first.");
        return;
    }

    const file = input.files[0];
    const formData = new FormData();
    formData.append("file", file);

    spinner.classList.remove("hidden");
    outputImage.classList.add("hidden");
    factsBox.classList.add("hidden");
    resultDiv.innerHTML = "";

    fetch("/predict", {
        method: "POST",
        body: formData
    })
    .then(response => response.json())
    .then(data => {
        spinner.classList.add("hidden");

        if (data.animals && data.animals.length > 0) {
            if (!hasDetectedOnce) hasDetectedOnce = true;

            mainContainer.classList.add("move-left");
            rightPanel.classList.remove("hidden");
            leftPanel.classList.add("detected");

            resultDiv.innerHTML = "<h3>Detected Animals:</h3>";
            animalFacts.innerHTML = "";

            const uniqueAnimals = new Set();
            let humanDetected = false;

            data.animals.forEach(animal => {
                const name = animal.name;
                resultDiv.innerHTML += `<p><strong>${name}</strong> - ${(animal.confidence * 100).toFixed(2)}%</p>`;
                if (name.toLowerCase() === "human") humanDetected = true;
                if (!uniqueAnimals.has(name)) {
                    uniqueAnimals.add(name);
                    fetchWikipediaSummary(name);
                }
            });

            if (humanDetected) {
                alertBanner.classList.remove("hidden");
                alertBanner.classList.add("show");
                setTimeout(() => {
                    alertBanner.classList.remove("show");
                    alertBanner.classList.add("hidden");
                }, 5000);
            }

            outputImage.src = data.image_url + "?t=" + new Date().getTime();
            outputImage.classList.remove("hidden");
            factsBox.classList.remove("hidden");
        } else {
            resultDiv.innerHTML = "<p>No animals detected.</p>";
        }
    })
    .catch(error => {
        spinner.classList.add("hidden");
        console.error("Error:", error);
        alert("Something went wrong. Check the console for details.");
    });
}

function fetchWikipediaSummary(animalName) {
    const apiUrl = `https://en.wikipedia.org/api/rest_v1/page/summary/${encodeURIComponent(animalName)}`;
    fetch(apiUrl)
        .then(response => response.json())
        .then(data => {
            const fact = data.extract;
            document.getElementById("animalFacts").innerHTML += `<li><strong>${animalName}:</strong> ${fact}</li>`;
        })
        .catch(error => console.error("Error fetching Wikipedia summary:", error));
}

// Dropdown toggle
function toggleDropdown() {
    const dropdown = document.getElementById("dropdownMenu");
    dropdown.classList.toggle("hidden");
}

// Show login form
function showLoginForm() {
    closeForms();
    document.getElementById("loginForm").classList.remove("hidden");
    document.getElementById("overlay").classList.remove("hidden");
}

// Show signup form
function showSignupForm() {
    closeForms();
    document.getElementById("signupForm").classList.remove("hidden");
    document.getElementById("overlay").classList.remove("hidden");
}

// Close all forms
function closeForms() {
    document.getElementById("loginForm")?.classList.add("hidden");
    document.getElementById("signupForm")?.classList.add("hidden");
    document.getElementById("overlay")?.classList.add("hidden");
}

// Submit login to Flask
async function submitLogin() {
    const username = document.getElementById("loginUsername").value;
    const password = document.getElementById("loginPassword").value;

    if (!username || !password) {
        alert("Please fill in both fields.");
        return;
    }

    const response = await fetch("/login", {
        method: "POST",
        headers: {
            "Content-Type": "application/json"
        },
        body: JSON.stringify({ username, password })
    });

    const result = await response.json();
    if (result.success) {
        window.location.href = "/dashboard";  // Redirect without alert
    } else {
        alert(result.message);  // Only show alert if login fails
    }
}

// Submit signup to Flask
async function submitSignup() {
    const username = document.getElementById("signupUsername").value;
    const email = document.getElementById("signupEmail").value;
    const password = document.getElementById("signupPassword").value;
    const confirmPassword = document.getElementById("signupConfirmPassword").value;

    if (!username || !email || !password || !confirmPassword) {
        alert("Please fill in all fields.");
        return;
    }

    if (password !== confirmPassword) {
        alert("Passwords do not match!");
        return;
    }

    const response = await fetch("/signup", {
        method: "POST",
        headers: {
            "Content-Type": "application/json"
        },
        body: JSON.stringify({ username, email, password })
    });

    const result = await response.json();
    alert(result.message);
    if (result.success) {
        closeForms();
        resetForm("signupForm"); // Reset signup form
    }
}

// Function to reset a form
function resetForm(formId) {
    const form = document.getElementById(formId);
    form.reset();  // Reset the form fields
}

// Dropdown toggle
const userIcon = document.getElementById('userIcon');
const userDropdown = document.getElementById('userDropdown');

userIcon.addEventListener('click', () => {
    userDropdown.classList.toggle('hidden');
});

// Close dropdown if clicked outside
document.addEventListener('click', function(event) {
    if (!userIcon.contains(event.target) && !userDropdown.contains(event.target)) {
        userDropdown.classList.add('hidden');
    }
});

// Fetch and display detection history
async function loadDetectionHistory() {
    try {
        const response = await fetch('/api/detection-history');
        const data = await response.json();
        
        const detectionHistory = document.getElementById('detectionHistory');
        detectionHistory.innerHTML = '';

        if (data.length === 0) {
            detectionHistory.innerHTML = '<li>No detections yet.</li>';
        } else {
            data.forEach(detection => {
                const li = document.createElement('li');
                li.textContent = `${detection.timestamp} - ${detection.animal}`;
                detectionHistory.appendChild(li);
            });
        }
    } catch (error) {
        console.error('Error fetching detection history:', error);
    }
}

// Download detection logs
const downloadLogsButton = document.getElementById('downloadLogsButton');
downloadLogsButton.addEventListener('click', () => {
    window.location.href = '/download-logs';
});

// Load history when page loads
document.addEventListener('DOMContentLoaded', loadDetectionHistory);


this is script.js

now give me updated code 



